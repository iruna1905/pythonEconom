# –ú–Ω–æ–∂–∏–Ω–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è
from colorama import Fore
import numpy as np
from sklearn.linear_model import LinearRegression

print(f"15-–π –≤–∞—Ä—ñ–∞–Ω—Ç")

# print("–í–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ")
y = [8.08, 8.48, 8.32, 8.80, 9.44, 9.68, 9.78, 11.28, 10.24,
     10.72, 12.00, 11.76, 12.64, 13.36, 15.52, 17.68, 18.48, 18.96]

x = [
    [2.95, 27.44], [3.35, 29.08], [3.80, 32.02], [4.15, 29.06], [3.90, 34.52],
    [4.60, 37.08], [4.30, 34.70], [4.60, 35.62], [4.50, 43.42], [4.50, 43.66],
    [5.15, 41.36], [4.75, 49.12], [5.25, 44.90], [4.90, 47.10], [5.00, 47.84],
    [5.20, 48.65], [5.26, 48.25], [5.85, 50.32]
]
x, y = np.array(x), np.array(y)


# print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–º–æ—ó –º–æ–¥–µ–ª—ñ:")
model = LinearRegression().fit(x, y)
print(model)


# print("–û—Ç—Ä–∏–º–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏:")
# R¬≤ = (score)
# round(), 4 –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è
r_sq = round(model.score(x, y), 4)
print(f"–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –¥–µ—Ç–µ—Ä–º—ñ–Ω–∞—Ü—ñ—ó (ùëÖ¬≤): {r_sq}")

print(f"intercept (a, ùëè‚ÇÄ): {round(model.intercept_, 4)}")
print(f"slope (b, ùëè‚ÇÅ): {model.coef_}")


# print("–ü—Ä–æ–≥–Ω–æ–∑—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å")
# g(xi) –∑–∞–¥—è–∫–∏ —Ñ—É–Ω–∫—Ü—ñ—ó Python
y_pred = model.predict(x)
print(f"predicted response (g(xi)): \n{y_pred}")

# g(xi) –ø–æ —Ñ–æ—Ä–º—É–ª—ñ
y_pred = model.intercept_ + model.coef_ * x
print(f"predicted response (g(xi)):\n{y_pred}")

# –º–æ–¥–µ–ª—å –¥–ª—è –Ω–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
x_new = np.arange(10).reshape((-1, 2))
print(x_new)
y_new = model.predict(x_new)
print(y_new)

print(Fore.YELLOW + f"–í–∏—Å–Ω–æ–≤–∫–∏:"
                 f"\n (ùëÖ¬≤): {r_sq},"
                 f"\n (a, ùëè‚ÇÄ): {round(model.intercept_, 4)},"
                 f"\n (b, ùëè‚ÇÅ): {model.coef_}")
